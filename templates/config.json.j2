{{ ansible_managed | comment('cblock') }}

{% set stream_settings %}
"streamSettings": {
    "sockopt": {
        "mark": {{ so_mark_forward }}
    }
}
{% endset %}

{% set mux_settings %}
"mux": {
    "enabled": {% if mux_concurrency | int > 0 %}true{% else %}false{% endif %},
    "concurrency": {{ mux_concurrency }}
}
{% endset %}

{% set socks_settings %}
"protocol": "socks",
"settings": {
    "auth": "noauth",
    "udp": false
}
{% endset %}

{% set main %}
{
    "log": {
        "access": "{{ log_access }}",
        "error": "{{ log_error }}",
        "loglevel": "{{ log_level }}"
    },
    "inbounds": [
        {
            "port": 12345,
            "tag": "tproxy",
            "protocol": "dokodemo-door",
            "settings": {
                "followRedirect": true,
                "network": "tcp,udp"
            },
            {% if sniffing_enabled %}
            "sniffing": {
                "enabled": true,
                "destOverride": [
                    "http",
                    "tls"
                ]
            },
            {% endif %}
            "streamSettings": {
                "sockopt": {
                    "tproxy": "redirect"
                }
            }
        },
        {
            "port": {{ socks_port }},
            "tag": "socks",
            {{ socks_settings }}
        },
        {
            "port": {{ socks_direct_port }},
            "tag": "socks-direct",
            {{ socks_settings }}
        },
        {
            "port": {{ socks_forward_port }},
            "tag": "socks-forward",
            {{ socks_settings }}
        },
        {
            "port": 53,
            "tag": "dns",
            "protocol": "dokodemo-door",
            "settings": {
                "address": "8.8.8.8",
                "port": 53,
                "network": "udp"
            }
        },
        {
            "listen": "{{ api_listen }}",
            "port": "{{ api_port }}",
            "tag": "api",
            "protocol": "dokodemo-door",
            "settings": {
                "address": "127.0.0.1"
            }
        }
    ],
    "dns": {
        "tag": "internal-dns",
        {% if dns_hosts %}
        "hosts": {{ dns_hosts | to_json }},
        {% endif %}
        "servers": [
            {% if dns_enabled %}
            "8.8.8.8",
            {% endif %}
            {
                "address": "114.114.114.114",
                "port": 53,
                "domains": [
                    "geosite:cn"
                ]
            }
        ]
    },
    "outbounds": [
        {% if forward_mode == 'shadowsocks' %}
        {
            "tag": "forward",
            "protocol": "shadowsocks",
            {{ mux_settings }},
            {{ stream_settings }},
            "settings": {
                "servers": [
                    {
                        "address": "{{ ss_server }}",
                        "port": {{ ss_port }},
                        "method": "{{ ss_method }}",
                        "password": "{{ ss_password }}"
                    }
                ]
            }
        },
        {% elif forward_mode == 'vmess' %}
        {
            "tag": "forward",
            "protocol": "vmess",
            {{ mux_settings }},
            {{ stream_settings }},
            "settings": {
                "vnext": [
                    {
                        "address": "{{ vm_server }}",
                        "port": {{ vm_port }},
                        "users": [
                            {
                                "id": "{{ vm_user_id }}",
                                "alterId": {{ vm_user_alter_id }},
                                "security": "{{ vm_user_security }}"
                            }
                        ]
                    }
                ]
            }
        },
        {% endif %}
        {
            "tag": "direct",
            "protocol": "freedom",
            "streamSettings": {
                "sockopt": {
                    "mark": {{ so_mark_direct }}
                }
            }
        },
        {
            "tag": "dns",
            "protocol": "dns"
        }
    ],
    "routing": {
        "domainStrategy": "AsIs",
        "rules": [
            {# special usage routes #}
            {
                "type": "field",
                "inboundTag": [
                    "api"
                ],
                "outboundTag": "api"
            },
            {
                "type": "field",
                "inboundTag": [
                    "dns"
                ],
                "outboundTag": "dns"
            },
            {# socks inbound routes #}
            {
                "type": "field",
                "inboundTag": [
                    "socks-direct"
                ],
                "outboundTag": "direct"
            },
            {
                "type": "field",
                "inboundTag": [
                    "socks-forward"
                ],
                "outboundTag": "forward"
            },
            {# sources routes #}
            {% if direct_sources is not none %}
            {
                "type": "field",
                "source": {{ direct_sources | to_json }},
                "outboundTag": "direct"
            },
            {% endif %}
            {% if forward_sources is not none %}
            {
                "type": "field",
                "source": {{ forward_sources | to_json }},
                "outboundTag": "forward"
            },
            {% endif %}
            {# cn routes #}
            {
                "type": "field",
                "outboundTag": "direct",
                "domain": [
                    "geosite:cn"
                ]
            },
            {
                "type": "field",
                "outboundTag": "direct",
                "ip": [
                    "geoip:cn"
                ]
            }
        ]
    },
    "api": {
        "tag": "api",
        "services": [
            "HandlerService",
            "LoggerService",
            "StatsService"
        ]
    },
    "policy": {
        "levels": {
            "0": {
                "handshake": 2,
                "connIdle": 300,
                "uplinkOnly": 0,
                "downlinkOnly": 0,
                "statsUserUplink": false,
                "statsUserDownlink": false
            }
        },
        "system": {
            "statsInboundUplink": true,
            "statsInboundDownlink": true
        }
    },
    "stats": {}
}
{% endset %}
{{ main | from_json | to_json(indent=2) }}
