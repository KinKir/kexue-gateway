# V2ray 发行包路径。可在 https://github.com/v2ray/v2ray-core/releases 下载。
v2ray_archive: dist/v2ray-linux-arm64.zip
# 保留 IP 地址（段）。目标 IP 属于这些 IP 段的流量将不会进入 V2ray，而是直接由 iptables RETURN。
reversed_ips:
  - 0.0.0.0/8
  - 10.0.0.0/8
  - 127.0.0.0/8
  - 169.254.0.0/16
  - 172.16.0.0/12
  - 192.168.0.0/16
  - 224.0.0.0/4
  - 240.0.0.0/4
  - 255.255.255.255

# 是否完全禁用 IPv6。
disable_all_ipv6: true
# 多路复用数量。可指定单条 TCP 连接实际承载的连接数，若等于 0，则关闭多路复用。
mux_concurrency: '{{ {"shadowsocks": 0, "vmess": 4}[forward_mode] }}'
# 是否启用防污染 DNS。当关闭时，不会停止 53 端口的服务，而是将全部 DNS 查询直接转发至 114.114.114.114。
dns_enabled: '{{ {"shadowsocks": false, "vmess": true}[forward_mode] }}'
# 是否开启嗅探。当启用时，将监测 HTTP 和 TLS（HTTPS）流量的目标域名，可在无法指定客户端 DNS 时使用，可避免部分 DNS 污染。
sniffing_enabled: "{{ not dns_enabled }}"

# healthchecks.io 提供的 UUID。当不为空字符串时，将会启用健康检查上报。
healthchecks_uuid: ""
# 健康检查命令组。退出代码为 0 时，认为成功；否则认为失败。STDOUT 和 STDERR 的输出将会同时被上报到 healthchecks.io。
healthcheck_commands:
  - set -exu
  - 'curl --max-time 10 --socks5-hostname 127.0.0.1:{{ socks_forward_port }} -4fsS -D - -w "Remote IP: %{remote_ip}\nResponse time: %{time_total}s\n" http://www.gstatic.com/generate_204'
  - 'cat /etc/armbianmonitor/datasources/soctemp | awk "{ printf(\"CPU Temperature: %0.1f°C\n\", \$1/1000); }"'
  - 'echo "System uptime: $(uptime)"'
